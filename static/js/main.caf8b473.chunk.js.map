{"version":3,"sources":["HeaderOption.js","Header.js","features/userSlice.js","Sidebar.js","InputOption.js","Post.js","firebase.js","Feed.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["HeaderOption","avatar","Icon","title","className","Avatar","src","Header","alt","placeholder","type","HomeIcon","SupervisorAccount","BusinessCenterIcon","ChatIcon","NotificationsIcone","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Sidebar","useSelector","recentItem","topic","photoUrl","displayName","email","InputOption","color","style","Post","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","dispatch","useDispatch","alert","createUserWithEmailAndPassword","then","userAuth","updateProfile","uid","catch","error","App","console","log","onAuthStateChanged","photoURL","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.caf8b473.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./HeaderOption.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nfunction HeaderOption({ avatar, Icon, title }) {\r\n  return (\r\n    <div className=\"headerOption\">\r\n      {Icon && <Icon className=\"headerOption__icon\" />}\r\n      {avatar && <Avatar className=\"headerOption__icon\" src={avatar} />}\r\n      <h3 className=\"headerOption__title\">{title}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderOption;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport HeaderOption from \"./HeaderOption\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SupervisorAccount from \"@material-ui/icons/SupervisorAccount\";\r\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport NotificationsIcone from \"@material-ui/icons/Notifications\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <img src=\"linkedin-logo.png\" alt=\"\" />\r\n\r\n        <div className=\"header__search\">\r\n          <SearchIcon />\r\n          <input placeholder=\"Search\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <HeaderOption Icon={HomeIcon} title=\"Home\" />\r\n        <HeaderOption Icon={SupervisorAccount} title=\"My Network\" />\r\n        <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\r\n        <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\r\n        <HeaderOption Icon={NotificationsIcone} title=\"Notifications\" />\r\n        <HeaderOption avatar=\"avatar.png\" title=\"me\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { login, logout, selectUser } from \"./features/userSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Sidebar() {\r\n  const user = useSelector(selectUser);\r\n  const recentItem = (topic) => {\r\n    return (\r\n      <div className=\"sidebar__recentItem\">\r\n        <span className=\"sidebar__hash\">#</span>\r\n        <p>{topic}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__top\">\r\n        <img src=\"bgSidebar.jpeg\" alt=\"\" />\r\n        <Avatar className=\"sidebar__avatar\" src={user.photoUrl} />\r\n        <h2>{user.displayName}</h2>\r\n        <h4>{user.email}</h4>\r\n      </div>\r\n      <div className=\"sidebar__stats\">\r\n        <div className=\"sidebar__stat\">\r\n          <p>Who viewed you</p>\r\n          <p className=\"sidebar__statNumber\">2,000</p>\r\n        </div>\r\n        <div className=\"sidebar__stat\">\r\n          <p>Views on post</p>\r\n          <p className=\"sidebar__statNumber\">2,500</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__bottom\">\r\n        <p>Recent</p>\r\n        {recentItem(\"react js\")}\r\n        {recentItem(\"programming\")}\r\n        {recentItem(\"softwareenginnering\")}\r\n        {recentItem(\"design\")}\r\n        {recentItem(\"developer\")}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./InputOption.css\";\r\n\r\nfunction InputOption({ Icon, title, color }) {\r\n  return (\r\n    <div className=\"inputOption\">\r\n      <Icon style={{ color: color }} />\r\n      <h4>{title}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputOption;\r\n","import React from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./Post.css\";\r\nimport InputOption from \"./InputOption\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\r\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\n\r\nfunction Post({ name, description, message, photoUrl }) {\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__header\">\r\n        <Avatar />\r\n        <div className=\"post__info\">\r\n          <h2>{name}</h2>\r\n          <p>{description}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"post__body\">\r\n        <p>{message}</p>\r\n      </div>\r\n\r\n      <div className=\"post__buttons\">\r\n        <InputOption Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\r\n        <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\r\n        <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\r\n        <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAPq3cSYvl9ui_ll0Jefjkn-AvhZHdtGcE\",\r\n  authDomain: \"linkedin-clone-7c8bf.firebaseapp.com\",\r\n  projectId: \"linkedin-clone-7c8bf\",\r\n  storageBucket: \"linkedin-clone-7c8bf.appspot.com\",\r\n  messagingSenderId: \"641178549306\",\r\n  appId: \"1:641178549306:web:eba77766156eb462b38903\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { db, auth };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Feed.css\";\r\nimport Post from \"./Post\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport InputOption from \"./InputOption\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\r\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\r\nimport { db } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { login, logout, selectUser } from \"./features/userSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Feed() {\r\n  const user = useSelector(selectUser);\r\n  const [input, setInput] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"posts\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const sendPost = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"posts\").add({\r\n      name: user.displayName,\r\n      description: \"this is a test\",\r\n      message: input,\r\n      photoUrl: user.photoUrl,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <div className=\"feed__inputContainer\">\r\n        <div className=\"feed__input\">\r\n          <CreateIcon />\r\n          <form>\r\n            <input\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              type=\"text\"\r\n            />\r\n            <button onClick={sendPost} type=\"submit\">\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"feed__inputOptions\">\r\n          {/* Options */}\r\n          <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#7085f9\" />\r\n          <InputOption Icon={SubscriptionsIcon} title=\"Video\" color=\"#E7A33e\" />\r\n          <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#C0CbCd\" />\r\n          <InputOption\r\n            Icon={CalendarViewDayIcon}\r\n            title=\"Write article\"\r\n            color=\"#7FC15E\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {posts.map(({ id, data: { name, description, message, photoUrl } }) => {\r\n        return (\r\n          <Post\r\n            key={id}\r\n            name={name}\r\n            description={description}\r\n            message={message}\r\n            photoUrl={photoUrl}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { auth } from \"./firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"./features/userSlice\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [profilePic, setProfilePic] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const register = () => {\r\n    if (!name) {\r\n      return alert(\"Please enter f full name!\");\r\n    }\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userAuth) => {\r\n        userAuth.user\r\n          .updateProfile({\r\n            displayName: name,\r\n            // @ts-ignore\r\n            photoUrl: profilePic,\r\n          })\r\n          .then(() => {\r\n            dispatch(\r\n              login({\r\n                email: userAuth.user.email,\r\n                uid: userAuth.user.uid,\r\n                displayName: name,\r\n                photoUrl: profilePic,\r\n              })\r\n            );\r\n          });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const loginToApp = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img src=\"linkedin-logo.png\" alt=\"\" />\r\n\r\n      <form>\r\n        <input\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"Full name (required if registering)\"\r\n          type=\"text\"\r\n        />\r\n        <input\r\n          value={profilePic}\r\n          onChange={(e) => setProfilePic(e.target.value)}\r\n          placeholder=\"Profile pic URL (optional)\"\r\n          type=\"text\"\r\n        />\r\n        <input\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          type=\"text\"\r\n        />\r\n        <input\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n        />\r\n        <button type=\"submit\" onClick={loginToApp}>\r\n          Sign In\r\n        </button>\r\n      </form>\r\n      <p>\r\n        Not a member?{\" \"}\r\n        <span className=\"login__register\" onClick={register}>\r\n          Register Now\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport Feed from \"./Feed\";\nimport { auth } from \"./firebase\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport Login from \"./Login\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  console.log(user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        dispatch(\n          login({\n            email: userAuth.email,\n            uid: userAuth.uid,\n            displayName: userAuth.displayName,\n            photoUrl: userAuth.photoURL,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header />\n\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Sidebar />\n          <Feed />\n        </div>\n      )}\n\n      {/* App body */}\n\n      {/* feed */}\n      {/* widgets */}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/userSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}